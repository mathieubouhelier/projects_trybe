{"version":3,"sources":["components/Table.js","services/planetApi.js","actions/searchBarActions.js","actions/filterActions.js","components/SearchBar.js","components/Filter.js","components/MainContainer.js","actions/planetActions.js","App.js","reducers/planetReducer.js","reducers/FilterReducer.js","reducers/index.js","store/index.js","index.js"],"names":["tableHeaders","Table","filteredPlanet","this","props","className","map","header","scope","key","planet","name","React","Component","defaultProps","planetAPI","fetch","then","response","json","ok","Promise","resolve","reject","numericalFilter","value","type","SearchBar","data-testid","placeholder","onChange","e","searchBar","target","connect","state","filters","dispatch","Filter","filterByNumericValues","column","comparison","comparisonItems","handleChange","bind","columnRender","filterRender","buttonRender","comparisonRender","event","setState","activFilterColum","forEach","item","push","colonumItemsFiltered","filter","n","includes","index","onClick","deleteFilter","MainContainer","compare","planetFilter","getPlanet","planetValue","filterValue","operator","result","bar","data","searchedPlanet","filterArray","Number","isLoading","planets","planetReducer","filterByName","loading","searchSuccess","results","error","searchFailure","message","App","initialState","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07b67af4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst tableHeaders = [\n  'name',\n  'climate',\n  // 'created',\n  'diameter',\n  // 'edited',\n  // 'films',\n  'gravity',\n  'orbital_period',\n  'population',\n  'rotation_period',\n  'surface_water',\n  'terrain',\n  'url',\n];\n\nclass Table extends React.Component {\n  render() {\n    const { filteredPlanet } = this.props;\n\n    return (\n      <div>\n        <div className=\"table-responsive\">\n          <table className=\"table table-striped table-responsive\">\n            <thead className=\"thead-dark\">\n              <tr>\n                {tableHeaders.map((header) => (\n                  <th scope=\"col\" key={header}>\n                    {header}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {filteredPlanet.map((planet) => (\n                <tr key={planet.name}>\n                  {tableHeaders.map((header) => (\n                    <td>{planet[header]}</td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  filteredPlanet: PropTypes.arrayOf(PropTypes.object),\n};\n\nTable.defaultProps = {\n  filteredPlanet: null,\n};\nexport default Table;\n","const APIURL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nconst planetAPI = () =>\n  fetch(`${APIURL}`).then((response) => (\n    response\n      .json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)),\n      )),\n  );\n\nexport default planetAPI;\n","export const SEARCH_BAR = 'SEARCH_BAR';\n\nexport const searchBar = (value) => ({\n  type: SEARCH_BAR,\n  value,\n});\n","export const NUMERICAL_FILTER = 'NUMERICAL_FILTER';\nexport const DELETE_FILTER = 'DELETE_FILTER';\n\nexport const numericalFilter = (value) => ({\n  type: NUMERICAL_FILTER,\n  value,\n});\n\n\nexport const deleteFilter = (index) => ({\n  type: DELETE_FILTER,\n  index,\n});\n// console.log('test Action Filter', value)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { searchBar } from '../actions/searchBarActions';\nimport { numericalFilter } from '../actions/filterActions';\n\nclass SearchBar extends React.Component {\n  render() {\n    const { value } = this.props;\n    return (\n      <input\n        data-testid=\"name-filter\"\n        className=\"form-control col-12\"\n        placeholder=\"Search a Planet\"\n        onChange={(e) => this.props.searchBar(e.target.value)}\n        value={value}\n      />\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  value: state.filters.value,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  searchBar: (e) => dispatch(searchBar(e)),\n  numericalFilter: (e) => dispatch(numericalFilter(e)),\n});\n\nSearchBar.propTypes = {\n  searchBar: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nSearchBar.defaultProps = {\n  value: null,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { numericalFilter, deleteFilter } from '../actions/filterActions';\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterByNumericValues: {\n        column: '',\n        comparison: '',\n        value: '',\n      },\n      comparisonItems: ['Comparação', 'maior que', 'igual a', 'menor que'],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.columnRender = this.columnRender.bind(this);\n    this.filterRender = this.filterRender.bind(this);\n    this.buttonRender = this.buttonRender.bind(this);\n    this.comparisonRender = this.comparisonRender.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      filterByNumericValues: {\n        ...this.state.filterByNumericValues,\n        [name]: value,\n      },\n    });\n  }\n\n  columnRender() {\n    const colonumItemsArray = [\n      'Coluna',\n      'population',\n      'orbital_period',\n      'diameter',\n      'rotation_period',\n      'surface_water',\n    ]; \n    const activFilterColum = [];\n    this.props.filterByNumericValues.forEach((item) => {\n      activFilterColum.push(item.column);\n    });\n    let colonumItemsFiltered = [];\n    colonumItemsFiltered = colonumItemsArray.filter(\n      (n) => !activFilterColum.includes(n),\n    );\n    \n    return (\n      <select\n        name=\"column\"\n        className=\"form-control col-md-5 mr-3 mb-2\"\n        data-testid=\"column-filter\"\n        value={this.state.value}\n        onChange={this.handleChange}\n      >\n        {colonumItemsFiltered.map((item) => (\n          <option key={item} value={item}>\n            {item}\n          </option>\n        ))}\n      </select>\n    );\n  }\n\n  filterRender() {\n    return (\n      <div className=\"filterListContainer\">\n        {this.props.filterByNumericValues.map((filter, index) => (\n          <div data-testid=\"filter\" className=\"filterList\">\n            <div>\n              {filter.column} {filter.comparison} {filter.value}\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger button-delete\"\n                onClick={() => this.props.deleteFilter(index)}\n              >\n                X\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  buttonRender() {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        data-testid=\"button-filter\"\n        onClick={() =>\n          this.props.numericalFilter(this.state.filterByNumericValues)\n        }\n      >\n        Filter\n      </button>\n    );\n  }\n\n  comparisonRender() {\n    return (\n      <select\n        name=\"comparison\"\n        className=\"form-control col-md-5 mb-2\"\n        data-testid=\"comparison-filter\"\n        value={this.state.comparison}\n        onChange={this.handleChange}\n      >\n        {this.state.comparisonItems.map((item) => (\n          <option key={item} value={item}>\n            {item}\n          </option>\n        ))}\n      </select>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"filters\">\n        <div>\n          <form>\n            <div className=\"form-group\">\n              <div className=\"form-row\">\n                <this.columnRender />\n                <this.comparisonRender />\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <div className=\"form-row\">\n                <input\n                  name=\"value\"\n                  type=\"number\"\n                  className=\"form-control col-md-8 mr-1\"\n                  data-testid=\"value-filter\"\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                />\n                <this.buttonRender />\n              </div>\n            </div>\n          </form>\n        </div>\n        <div className=\"filterListMain\">\n          <this.filterRender />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filterByNumericValues: state.filters.filterByNumericValues,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  numericalFilter: (e) => dispatch(numericalFilter(e)),\n  deleteFilter: (e) => dispatch(deleteFilter(e)),\n});\n\nFilter.propTypes = {\n  numericalFilter: PropTypes.func.isRequired,\n  deleteFilter: PropTypes.func.isRequired,\n  filterByNumericValues: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Table from './Table';\nimport { fetchPlanet } from '../actions/planetActions';\nimport SearchBar from './SearchBar';\nimport Filter from './Filter';\nimport './MainContainer.css';\n\nclass MainContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.compare = this.compare.bind(this);\n    this.planetFilter = this.planetFilter.bind(this);\n  }\n\n  componentDidMount() {\n    const { getPlanet } = this.props;\n    getPlanet();\n  }\n\n  // used to compare value of the planet and filter value with >, <, and ===\n  compare(planetValue, filterValue, operator) {\n    let result = false;\n    if (operator === 'maior que') result = planetValue > filterValue;\n    if (operator === 'menor que') result = planetValue < filterValue;\n    if (operator === 'igual a') result = planetValue === filterValue;\n    this.bar = result;\n    return result;\n  }\n\n  // filter the complete planet list from API according to active filters\n  planetFilter() {\n    const { data, filters, searchedPlanet } = this.props;\n    const filterArray = filters.filterByNumericValues;\n    let filteredPlanet = data.filter((planet) =>\n      planet.name.includes(searchedPlanet),\n    );\n    filterArray.map((filter) => {\n      filteredPlanet = filteredPlanet.filter((planet) =>\n        this.compare(\n          Number(planet[filter.column]),\n          Number(filter.value),\n          filter.comparison,\n        ),\n      );\n      return filteredPlanet;\n    });\n    return filteredPlanet;\n  }\n\n  render() {\n    const { data, isLoading } = this.props;\n    return (\n      <div>\n          <div className=\"filterContainer\">\n            <div className=\"searchbar\">\n              <SearchBar />\n            </div>\n            <div>\n              <Filter />\n            </div>\n          </div>\n        {!isLoading && ( // When API is not done Table is not rendered\n          <Table planets={data} filteredPlanet={this.planetFilter()} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.planetReducer.isLoading,\n  data: state.planetReducer.data,\n  searchedPlanet: state.filters.filterByName.name,\n  filters: state.filters,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getPlanet: () => dispatch(fetchPlanet()),\n});\n\nMainContainer.propTypes = {\n  getPlanet: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object),\n  searchedPlanet: PropTypes.string,\n  isLoading: PropTypes.bool.isRequired,\n  filters: PropTypes.shape(),\n};\n\nMainContainer.defaultProps = {\n  data: [],\n  filters: null,\n  searchedPlanet: null,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer);\n","import planetAPI from '../services/planetApi';\n\nexport const SEARCH_BEGIN = 'SEARCH_BEGIN';\nexport const SEARCH_SUCCESS = 'SEARCH_SUCCESS';\nexport const SEARCH_ERROR = 'SEARCH_ERROR';\n\nexport const searchBegin = () => ({ type: SEARCH_BEGIN, loading: true });\n\nexport const searchSuccess = (data) => ({\n  type: SEARCH_SUCCESS,\n  loading: false,\n  data,\n});\n\nexport const searchFailure = (error) => ({\n  type: SEARCH_ERROR,\n  loading: false,\n  error,\n});\n\nexport function fetchPlanet() {\n  return (dispatch) => {\n    dispatch(searchBegin());\n    return planetAPI().then(\n      (data) => dispatch(searchSuccess(data.results)),\n      (error) => dispatch(searchFailure(error.message)),\n    );\n  };\n}\n","import React from 'react';\nimport MainContainer from './components/MainContainer';\nimport './App.css';\n// ToDo\n// Refract Filter.js export some function\n// porque precise de this ?\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  SEARCH_BEGIN,\n  SEARCH_SUCCESS,\n  SEARCH_ERROR,\n} from '../actions/planetActions';\n\nconst initialState = {\n  isLoading: true,\n  data: {},\n};\n\nfunction planetReducer(state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_BEGIN:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case SEARCH_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.data,\n      };\n    case SEARCH_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default planetReducer;\n","import { NUMERICAL_FILTER, DELETE_FILTER } from '../actions/filterActions';\nimport { SEARCH_BAR } from '../actions/searchBarActions';\n\nconst initialState = {\n  filterByName: {\n    name: '',\n  },\n  filterByNumericValues: [],\n};\n\nfunction filters(state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_BAR:\n      return { ...state, filterByName: { name: action.value } };\n    case DELETE_FILTER:\n      return {\n        ...state,\n        filterByNumericValues: state.filterByNumericValues.filter(\n          (filter, index) => index !== action.index,\n        ),\n      };\n    case NUMERICAL_FILTER: {\n      const filter = action.value;\n      return {\n        ...state,\n        filterByNumericValues: [...state.filterByNumericValues,\n          {\n            column: filter.column,\n            comparison: filter.comparison,\n            value: filter.value,\n          },\n        ],\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default filters;\n","import { combineReducers } from 'redux';\nimport planetReducer from './planetReducer';\nimport filters from './FilterReducer';\n\n\nconst rootReducer = combineReducers({ planetReducer, filters });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    ,\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}